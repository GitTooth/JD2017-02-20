//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.04.20 at 01:58:29 PM MSK 
//


package by.it.loktev.jd02_10;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="square" type="{http://jd02_10.loktev.it.by}Square"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "square"
})
@XmlRootElement(name = "picture")
public class Picture {

    protected List<Square> square;

    public Picture() {
        square = new ArrayList<Square>();
    }

    /**
     * Gets the value of the square property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the square property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSquare().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Square }
     * 
     * 
     */
    public List<Square> getSquare() {
        if (square == null) {
            square = new ArrayList<Square>();
        }
        return this.square;
    }

    public void addSquare(Square s){
        square.add(s);
    }

    @Override
    public String toString() {
        StringBuilder sb=new StringBuilder();
        sb.append("Picture");
        sb.append("\n(");
        for ( Object O : square ) {
           sb.append("\n  "+O.toString());
        }
        sb.append("\n)");
        return sb.toString();
    }

}
